import os
import dgl
import networkx as nx
from androguard.misc import AnalyzeAPK

def apk_to_fcg(apk_path):
    a, d, dx = AnalyzeAPK(apk_path)
    # Tạo đồ thị rỗng
    fcg = nx.DiGraph()
    # Duyệt qua tất cả các phương thức
    for method in dx.get_methods():
        # Thêm nút cho mỗi phương thức
        method_name = method.get_method().get_name()
        if method_name is not None:
            method_name = method_name.replace(':', '')
            fcg.add_node(method_name)

        # Thêm cạnh cho mỗi lời gọi phương thức
        for _, call, _ in method.get_xref_to():
            call_name = call.get_method().get_name()
            if call_name is not None:
                call_name = call_name.replace(':', '')
                if method_name is not None:
                    fcg.add_edge(method_name, call_name)
    return fcg

# Thư mục chứa file apk và thư mục để lưu file DGL
apk_directory = r'C:\Users\ASUS\PycharmProjects\pythonProject1\FCG\google_play_begin - Copy'
dgl_directory = r'C:\Users\ASUS\PycharmProjects\pythonProject1\FCG\not'

# Duyệt qua tất cả các file apk trong thư mục apk_directory và chuyển đổi thành đồ thị FCG
def fcg(apk_directory, dgl_directory):
    for filename in os.listdir(apk_directory):
        if filename.endswith(".apk"):
            try:
                apk_path = os.path.join(apk_directory, filename)
                fcg = apk_to_fcg(apk_path)

                # Chuyển đồ thị FCG thành đồ thị DGL
                dgl_graph = dgl.from_networkx(fcg, node_attrs=None)

                # Hiển thị kích thước của đồ thị DGL
                print(f"Size of DGL graph {filename}: {dgl_graph.number_of_nodes()} nodes")

                # Lưu đồ thị DGL vào file với cùng tên với tệp gốc
                dgl_file_path = os.path.join(dgl_directory, filename.replace('.apk', '.dgl'))
                dgl.save_graphs(dgl_file_path, [dgl_graph])

                print(f"Processed APK {filename}")
            except Exception as e:
                print(f"Error processing APK {filename}: {e}")
