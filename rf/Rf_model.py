import pandas as pd
import numpy as np
import itertools
import os
import re
import pickle
import joblib
from sklearn.model_selection import train_test_split, GridSearchCV
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import accuracy_score, precision_score, recall_score, f1_score, cohen_kappa_score
from sklearn.metrics import confusion_matrix


def read_txt_file(filepath):
    with open(filepath, 'r') as f:
        data = [float(line.strip()) for line in f]
    return data

def process_folder(folder_path, label):
  data_list = []
  for filename in os.listdir(folder_path):
    file_path = os.path.join(folder_path, filename)
    data = read_txt_file(file_path)
    data_list.append(data)
  df = pd.DataFrame(data_list)
  df['label'] = label  
  return df
malware_df = process_folder('malware', 1)  
benign_df = process_folder('benign', 0)  


data_df = pd.concat([malware_df, benign_df], ignore_index=True)

print(data_df)

data_df.to_csv('data.csv', index=False)
data = pd.read_csv('data.csv')

print(data)

def load_data():
    X = data.drop(['label'],axis=1).values
    y = data['label'].values
    print(X.shape)
    print(y.shape)
    return train_test_split(X, y, test_size=0.2)

def train_and_test(X_test, y_test):
    # rf = RandomForestClassifier(n_estimators = 100, random_state=42)
    # rf.fit(X_train, y_train)
    # pre = rf.predict(X_test)
    
   # Evaluation metrics
    # accuracy = accuracy_score(y_test, pre)
    # print(pre)
    # print("Accuracy:", accuracy)

   # Save models
    # joblib.dump(rf, "rf_model.joblib")
    rf1 = joblib.load('C:\Users\admin\Desktop\tai-lieu\NÄƒm 3-2\ATBM\BTL\rf\rf_model.joblib')

    pre = rf1.predict(X_test)
    
   # Evaluation metrics
    accuracy = accuracy_score(y_test, pre)
    print(pre)
    print("Accuracy:", accuracy)



def rf(node_embeded_path):
    X_train, X_test, y_train, y_test = load_data()
    train_and_test(X_train, y_train, X_test, y_test)
